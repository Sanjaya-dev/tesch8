{"ast":null,"code":"var _jsxFileName = \"D:\\\\Binar academy\\\\tesch8\\\\src\\\\components\\\\Login\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"../../App.css\";\n\n// const GOOGLECLIENTID = \"979909028362-m77kbte3cel9jompo35lvn4fsg3vv882.apps.googleusercontent.com\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function doLogin(_ref) {\n  let {\n    email,\n    password\n  } = _ref;\n  // Gunakan endpoint-mu sendiri\n  const response = await fetch(\"http://localhost:3001/api/v1/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  return data.token;\n}\nasync function doLoginWithGoogle(token) {\n  const response = await fetch(\"http://localhost:8000/api/v1/auth/google\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      token\n    })\n  });\n  const data = await response.json();\n  return data.token;\n}\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    setIsLoggedIn(!!token);\n  }, [token]);\n  function handleSubmit(e) {\n    setIsLoading(true);\n    e.preventDefault();\n    doLogin({\n      email,\n      password\n    }).then(token => localStorage.setItem(\"token\", token)).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n  }\n  const haldleSuccessGoogle = response => {\n    console.log(response);\n    console.log(response.tokenId);\n    if (response.tokenId) {\n      doLoginWithGoogle(response.tokenId).then(token => {\n        localStorage.setItem(\"token\", token);\n        setIsLoggedIn(token);\n      }).catch(err => console.log(err.message)).finally(() => setIsLoading(false));\n    }\n  };\n  const haldleFailureGoogle = response => {\n    console.log(response);\n    alert(response);\n  };\n  function handleLogout(e) {\n    setIsLoading(true);\n    e.preventDefault();\n    localStorage.removeItem(\"token\");\n    setIsLoggedIn(false);\n    setIsLoading(false);\n  }\n  return (\n    /*#__PURE__*/\n    // <div className='container form_login'>\n    //   <h4>LOGIN</h4>\n    //   <form onSubmit={handleSubmit}>\n    //     <div className=\"mb-3\">\n    //       <label for=\"email\" className=\"form-label\">Email</label>\n    //       <input type=\"email\" className=\"form-control\" id=\"email\" onChange={(e)=>setEmail(e.target.value)}/>\n    //     </div>\n    //     <div className=\"mb-3\">\n    //       <label for=\"password\" className=\"form-label\">Password</label>\n    //       <input type=\"password\" className=\"form-control\" id=\"password\" onChange={(e)=>setPasword(e.target.value)}/>\n    //     </div>\n    //     <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    //   </form>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            onChange: e => setEmail(e.target.value),\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value),\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: isLoading ? \"Loading\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Logout\",\n          onClick: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Login, \"aNAh5iXRJBRdfPK5MMTCtGDelAA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","logo","doLogin","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","token","doLoginWithGoogle","Login","setEmail","setPassword","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","localStorage","getItem","handleSubmit","e","preventDefault","then","setItem","catch","err","console","log","message","finally","haldleSuccessGoogle","tokenId","haldleFailureGoogle","alert","handleLogout","removeItem","target","value"],"sources":["D:/Binar academy/tesch8/src/components/Login/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport logo from \"../../logo.svg\";\r\nimport \"../../App.css\";\r\n\r\n\r\n// const GOOGLECLIENTID = \"979909028362-m77kbte3cel9jompo35lvn4fsg3vv882.apps.googleusercontent.com\"\r\n\r\nasync function doLogin({ email, password }) {\r\n  // Gunakan endpoint-mu sendiri\r\n  const response = await fetch(\"http://localhost:3001/api/v1/auth/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n    }),\r\n  });\r\n  const data = await response.json();\r\n  return data.token;\r\n}\r\n\r\nasync function doLoginWithGoogle(token) {\r\n  const response = await fetch(\"http://localhost:8000/api/v1/auth/google\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ token }),\r\n  });\r\n  const data = await response.json();\r\n  return data.token;\r\n}\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    setIsLoggedIn(!!token);\r\n  }, [token]);\r\n\r\n  function handleSubmit(e) {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    doLogin({ email, password })\r\n      .then((token) => localStorage.setItem(\"token\", token))\r\n      .catch((err) => console.log(err.message))\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n\r\n  const haldleSuccessGoogle = (response) => {\r\n    console.log(response);\r\n    console.log(response.tokenId);\r\n    if (response.tokenId) {\r\n      doLoginWithGoogle(response.tokenId)\r\n        .then((token) => {\r\n          localStorage.setItem(\"token\", token);\r\n          setIsLoggedIn(token);\r\n        })\r\n        .catch((err) => console.log(err.message))\r\n        .finally(() => setIsLoading(false));\r\n    }\r\n  };\r\n  const haldleFailureGoogle = (response) => {\r\n    console.log(response);\r\n    alert(response);\r\n  };\r\n\r\n  function handleLogout(e) {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    setIsLoggedIn(false);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    // <div className='container form_login'>\r\n    //   <h4>LOGIN</h4>\r\n    //   <form onSubmit={handleSubmit}>\r\n    //     <div className=\"mb-3\">\r\n    //       <label for=\"email\" className=\"form-label\">Email</label>\r\n    //       <input type=\"email\" className=\"form-control\" id=\"email\" onChange={(e)=>setEmail(e.target.value)}/>\r\n    //     </div>\r\n    //     <div className=\"mb-3\">\r\n    //       <label for=\"password\" className=\"form-label\">Password</label>\r\n    //       <input type=\"password\" className=\"form-control\" id=\"password\" onChange={(e)=>setPasword(e.target.value)}/>\r\n    //     </div>\r\n    //     <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    //   </form>\r\n    // </div>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n        {!isLoggedIn ? (\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <input type=\"submit\" value={isLoading ? \"Loading\" : \"Login\"} />\r\n            {/* <GoogleLogin\r\n              clientId={GOOGLECLIENTID}\r\n              buttonText=\"Login with Google\"\r\n              onSuccess={haldleSuccessGoogle}\r\n              onFailure={haldleFailureGoogle}\r\n              cookiePolicy={\"single_host_origin\"}\r\n            /> */}\r\n          </form>\r\n        ) : (\r\n          <input type=\"submit\" value=\"Logout\" onClick={handleLogout} />\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}